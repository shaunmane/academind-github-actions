name: Deploy website

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: |
          cd 04\ Artifacts\ \&\ Outputs/01\ Starting\ Project                 # move to project file
          npm ci
      - name: Lint code
        run: |
          cd 04\ Artifacts\ \&\ Outputs/01\ Starting\ Project
          npm run lint
      - name: Test code
        run: |
          cd 04\ Artifacts\ \&\ Outputs/01\ Starting\ Project
          npm run test
  
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: |
          cd 04\ Artifacts\ \&\ Outputs/01\ Starting\ Project
          npm ci
      - name: Build website
        run: |
          cd 04\ Artifacts\ \&\ Outputs/01\ Starting\ Project
          npm run build
      - name: Publish JS filename
        id: publish
        run: |
          cd 04\ Artifacts\ \&\ Outputs/01\ Starting\ Project
          find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifacts                                            # to upload files onto the github cli
        uses: actions/upload-artifact@v4
        with:
          name: dist-files                                                # identifier/name of the file once uploaded
          path: 04\ Artifacts\ \&\ Outputs/01\ Starting\ Project          # file path 
          #  path: |
          #    dist
          #   package.json

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files                                                # use the same identifier as uploaded
      - name: Output contents
        run: ls                                                           # list contents of artifact
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying..."
